{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","utils/fetchClient.ts","components/NewCommentForm.tsx","components/PostDetails.tsx","api/api.ts","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","_ref","userPosts","hendleOpenPost","idOfOpenPost","_jsxs","children","_jsx","className","map","post","id","title","type","classNames","onClick","Loader","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","arguments","length","undefined","data","options","body","JSON","stringify","headers","then","fetch","response","json","client","NewCommentForm","getComments","setError","_useState","useState","postId","name","email","_useState2","_slicedToArray","queryForm","setQueryForm","_useState3","_useState4","isSending","setIsSending","handleChange","e","_e$target","target","value","_objectSpread","_defineProperty","handleClearForm","hendleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","t0","isCommetsEror","finish","stop","_x","apply","onSubmit","htmlFor","placeholder","trim","onChange","PostDetails","currPost","isError","isWriteComment","setIsWriteComment","comments","setComments","_useState5","_useState6","isLoading","setIsLoading","filter","comment","getCommentsByPostsId","catch","finally","deleteComment","commentID","concat","useEffect","href","UserSelector","users","hendleSelector","openSelector","hendleUser","isUser","role","user","App","isPostsError","isCommetsError","isUserError","error","setUsers","_useState7","_useState8","posts","setPosts","_useState9","_useState10","setOpenSelector","_useState11","_useState12","setUser","_useState13","_useState14","setIdOfOpenPost","isPostsEror","userId","find","currUser","prevId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70bf1e43.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  userPosts: Post[]\n  hendleOpenPost:(id: number) => void\n  idOfOpenPost: number | null\n};\n\nexport const PostsList: React.FC<Props> = ({\n  userPosts,\n  hendleOpenPost,\n  idOfOpenPost,\n}) => {\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table\n        className=\"table is-fullwidth is-striped is-hoverable is-narrow\"\n      >\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {userPosts.map(post => {\n            return (\n              <tr\n                key={post.id}\n                data-cy=\"Post\"\n              >\n                <td data-cy=\"PostId\">{post.id}</td>\n\n                <td data-cy=\"PostTitle\">\n                  {post.title}\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    type=\"button\"\n                    data-cy=\"PostButton\"\n                    className={\n                      classNames('button is-link',\n                        { ' is-light': idOfOpenPost !== post.id })\n                    }\n                    onClick={() => hendleOpenPost(post.id)}\n                  >\n                    {idOfOpenPost === post.id ? 'Close' : 'Open'}\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { client } from '../utils/fetchClient';\nimport { IErrors } from '../types/IErrors';\n\nexport interface FormData {\n  postId: number | null,\n  name: string;\n  email: string;\n  body: string;\n}\n\ntype Props = {\n  idOfOpenPost: number\n  getComments: (postId: number) => void;\n  setError: React.Dispatch<React.SetStateAction<IErrors>>;\n\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  idOfOpenPost,\n  getComments,\n  setError,\n}) => {\n  const [queryForm, setQueryForm] = useState<FormData>({\n    postId: null,\n    name: '',\n    email: '',\n    body: '',\n  });\n  const [isSending, setIsSending] = useState<boolean>(false);\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n    | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = e.target;\n\n    setQueryForm({\n      ...queryForm,\n      [name]: value,\n    });\n  };\n\n  const handleClearForm = () => {\n    setQueryForm({\n      postId: null,\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  const hendleSubmit = async (\n    e: React.SyntheticEvent,\n  ) => {\n    e.preventDefault();\n    setIsSending(true);\n\n    try {\n      await client.post('/comments', {\n        postId: idOfOpenPost,\n        name: queryForm.name,\n        email: queryForm.email,\n        body: queryForm.body,\n      });\n    } catch (error) {\n      setError((prev) => ({\n        ...prev,\n        isCommetsEror: true,\n      }));\n    } finally {\n      setIsSending(false);\n    }\n\n    getComments(idOfOpenPost);\n    handleClearForm();\n  };\n\n  return (\n    <form\n      data-cy=\"NewCommentForm\"\n      onSubmit={hendleSubmit}\n    >\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames('input',\n              { 'is-danger': isSending && queryForm.name.trim().length === 0 })}\n            value={queryForm.name}\n            onChange={handleChange}\n\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {\n            isSending\n            && queryForm.name.trim().length === 0\n            && (\n              <span\n                className=\"icon is-small is-right has-text-danger\"\n                data-cy=\"ErrorIcon\"\n              >\n                <i className=\"fas fa-exclamation-triangle\" />\n              </span>\n            )\n          }\n\n        </div>\n\n        {\n          isSending\n          && queryForm.name.trim().length === 0\n            && (\n              <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n                Name is required\n              </p>\n            )\n        }\n\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames('input',\n              {\n                'is-danger': isSending\n              && queryForm.email.trim().length === 0,\n              })}\n            value={queryForm.email}\n            onChange={handleChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {isSending\n          && queryForm.email.trim().length === 0\n            && (\n              <span\n                className=\"icon is-small is-right has-text-danger\"\n                data-cy=\"ErrorIcon\"\n              >\n                <i className=\"fas fa-exclamation-triangle\" />\n              </span>\n            )}\n\n        </div>\n\n        {isSending\n        && queryForm.email.trim().length === 0\n            && (\n              <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n                Email is required\n              </p>\n            )}\n\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames('textarea', {\n              'is-danger': isSending\n              && queryForm.body.trim().length === 0,\n            })}\n            value={queryForm.body}\n            onChange={handleChange}\n          />\n        </div>\n\n        {isSending\n        && queryForm.body.trim().length === 0 && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={classNames('button is-link',\n              { 'is-loading': isSending })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={handleClearForm}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport { getCommentsByPostsId } from '../api/api';\nimport { IErrors } from '../types/IErrors';\nimport { client } from '../utils/fetchClient';\n\ntype Props = {\n  currPost: Post | undefined;\n  isError: boolean;\n  setError: React.Dispatch<React.SetStateAction<IErrors>>;\n  idOfOpenPost: number;\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  currPost,\n  isError,\n  setError,\n  idOfOpenPost,\n}) => {\n  const [isWriteComment, setIsWriteComment] = useState<boolean>(false);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const getComments = (postId: number) => {\n    setIsLoading(true);\n\n    getCommentsByPostsId(postId)\n      .then((data) => setComments(data as Comment[]))\n      .catch(() => {\n        setError((prev) => ({\n          ...prev,\n          isCommetsEror: true,\n        }));\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const deleteComment = async (commentID: number) => {\n    setIsLoading(true);\n\n    setComments(comments.filter((comment) => comment.id !== commentID));\n\n    try {\n      await client.delete(`/comments/${commentID}`);\n    } catch {\n      setError((prev) => ({\n        ...prev,\n        isCommetsEror: true,\n      }));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleNewComment = () => {\n    setIsWriteComment(true);\n  };\n\n  useEffect(() => {\n    getComments(idOfOpenPost);\n  }, [idOfOpenPost]);\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">{`#${currPost?.id}: ${currPost?.title}`}</h2>\n\n          <p data-cy=\"PostBody\">{currPost?.body}</p>\n        </div>\n\n        <div className=\"block\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )}\n\n          {comments?.length === 0 ? (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          ) : (\n            <p className=\"title is-4\">Comments:</p>\n          )}\n\n          {comments.map((comment) => (\n            <article\n              key={comment.id}\n              className=\"message is-small\"\n              data-cy=\"Comment\"\n            >\n              <div className=\"message-header\">\n                <a href={comment.email} data-cy=\"CommentAuthor\">\n                  {comment.name}\n                </a>\n                <button\n                  data-cy=\"CommentDelete\"\n                  type=\"button\"\n                  className=\"delete is-small\"\n                  aria-label=\"delete\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  delete button\n                </button>\n              </div>\n\n              <div className=\"message-body\" data-cy=\"CommentBody\">\n                {comment.body}\n              </div>\n            </article>\n          ))}\n\n          {!isWriteComment && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={handleNewComment}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {isWriteComment && (\n          <NewCommentForm\n            idOfOpenPost={idOfOpenPost}\n            getComments={getComments}\n            setError={setError}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { client } from '../utils/fetchClient';\nimport { Comment } from '../types/Comment';\nimport { Post } from '../types/Post';\n\nexport const getCommentsByPostsId = (postId: Post['id']) => {\n  return client.get<Comment[]>('/comments')\n    .then(comments => comments\n      .filter(comment => comment.postId === postId));\n};\n","import React from 'react';\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[]\n  hendleSelector: () => void\n  openSelector: boolean\n  hendleUser: (user: User) => void\n  isUser: User | undefined\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  users,\n  hendleSelector,\n  openSelector,\n  hendleUser,\n  isUser,\n}) => {\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className=\"dropdown is-active\"\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={hendleSelector}\n        >\n          <span>\n            {isUser ? isUser.name : 'Choose a user'}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      {openSelector && (\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div\n            className=\"dropdown-content\"\n          >\n            {users.map(user => (\n              <a\n                key={user.id}\n                href={`#user-${user.id}`}\n                className=\"dropdown-item\"\n                onClick={() => hendleUser(user)}\n              >\n                {user.name}\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { client } from './utils/fetchClient';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\nimport { Loader } from './components/Loader';\nimport { IErrors } from './types/IErrors';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<IErrors>({\n    isPostsError: false,\n    isCommetsError: false,\n    isUserError: false,\n  });\n  const [users, setUsers] = useState<User[]>([]);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [openSelector, setOpenSelector] = useState<boolean>(false);\n  const [user, setUser] = useState<User | undefined>(undefined);\n  const [idOfOpenPost, setIdOfOpenPost] = useState<number | null>(null);\n\n  const getUsers = () => {\n    client.get<User[]>('/users')\n      .then(data => data?.length && setUsers(data))\n      .catch(() => {\n        setError(prev => ({\n          ...prev,\n          isUserError: true,\n        }));\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const getPosts = () => {\n    if (!user) {\n      setPosts([]);\n\n      return;\n    }\n\n    setIsLoading(true);\n\n    client.get<Post[]>(`/posts?userId=${user.id}`)\n      .then(data => setPosts(data))\n      .catch(() => {\n        setError(prev => ({\n          ...prev,\n          isPostsEror: true,\n        }));\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUsers();\n  }, []);\n\n  useEffect(() => {\n    getPosts();\n  }, [user]);\n\n  const onClickToSelector = () => {\n    setOpenSelector(!openSelector);\n  };\n\n  const hendleUser = (currUser: User) => {\n    setUser(currUser);\n    setOpenSelector(false);\n  };\n\n  const userPosts = posts.filter(post => post.userId === user?.id);\n  const currPost = userPosts.find(post => post.id === idOfOpenPost);\n\n  const hendleOpenPost = (id: number) => {\n    setIdOfOpenPost((prevId) => (\n      prevId === id ? null : id\n    ));\n  };\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  hendleSelector={onClickToSelector}\n                  openSelector={openSelector}\n                  hendleUser={hendleUser}\n                  isUser={user}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {\n                  !user\n                  && userPosts.length === 0\n                  && (\n                    <p data-cy=\"NoSelectedUser\">\n                      No user selected\n                    </p>\n                  )\n                }\n\n                {isLoading && <Loader />}\n\n                {!posts && error && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {\n                  !isLoading\n                  && user\n                  && userPosts.length === 0\n                  && (\n                    <div\n                      className=\"notification is-warning\"\n                      data-cy=\"NoPostsYet\"\n                    >\n                      No posts yet\n                    </div>\n                  )\n                }\n\n                {user\n                  && userPosts.length > 0\n                  && (\n                    <PostsList\n                      userPosts={userPosts}\n                      hendleOpenPost={hendleOpenPost}\n                      idOfOpenPost={idOfOpenPost}\n                    />\n                  )}\n\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': idOfOpenPost },\n            )}\n          >\n            {idOfOpenPost && (\n              <div className=\"tile is-child box is-success \">\n                <PostDetails\n                  currPost={currPost}\n                  isError={error.isCommetsError}\n                  setError={setError}\n                  idOfOpenPost={idOfOpenPost}\n                />\n              </div>\n            )}\n\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}